version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: autoblog-client
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    depends_on:
      - server
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: autoblog-server
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=autoblog
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key
      - JWT_EXPIRES_IN=1d
      - JWT_REFRESH_EXPIRES_IN=7d
      - RECAPTCHA_SECRET_KEY=your-recaptcha-secret-key
      - CDN_URL=http://localhost:5000
      - CACHE_TTL=60
      - QUEUE_PREFIX=autoblog
      - PUBLISHING_CRON_TIME=10
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: autoblog-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=autoblog
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: autoblog-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: autoblog-pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
    driver: local 